/**
 * Global only send one message at a time
 * @type {Boolean} [messageSent=false]
 */
var messageSent = false;

/**
 * Email a seller form
 */
var emailSeller = {
  formSubmits: 0, // Only one ajax call at a time, please
  submitEmailForm: function() {
    var valid = this.validateEmailFields();
    if (valid === true && this.formSubmits === 0) {
      this.formSubmits++; // Only one ajax call at a time, please
      var emailData = $("#emailForm").serialize();
      $.ajax({
        url: "/listing/email-seller/",
        data: emailData,
        success: function(result) {
          if (result == 1) {
            $(".email-form-result")
              .html("Your email was sent.")
              .css("display", "block");
            $(".email-form-result-foot").css("display", "block");
            $(".email-form").css("display", "none");
            $(".email-form-foot").css("display", "none");
            messageSent = true;
          } else {
            $(".email-form-result")
              .html(result.response.message["m_0"])
              .css("display", "block");
            $(".email-form").css("display", "none");
            messageSent = false;
          }
        },
        fail: function(result) {
          console.log("fail", result);
          $(".email-form-result")
            .html(result.message["m_0"])
            .css("display", "block");
          $(".email-form").css("display", "none");
          messageSent = false;
        },
        complete: function() {
          this.formSubmits = 0; // Ajax call done. A new one can be submitted now.
        }
      });
    }
  },
  validateEmailFields: function() {
    /**
     * This validates the form fields, and sets the error notifications
     *
     * @returns {boolean}
     */

    // remove prior error highlighting
    this.removeErrorHighlighting();
    var errors = [];

    // validate required fields
    var notEmpty = ["firstname", "lastname", "email", "message"];
    notEmpty.forEach(function(field, index) {
      if ($(".email_seller_modal #" + field).val().length === 0) {
        errors.push({ field: field, message: "This field is required" });
      }
    });

    // validate email
    if ($(".email_seller_modal #email").val().length > 0) {
      var email_re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      var OK = email_re.test($(".email_seller_modal #email").val());
      if (!OK) {
        errors.push({ field: "email", message: "Invalid email." });
      }
    }

    // validate phone number
    if ($(".email_seller_modal #phone").val().length > 0) {
      var phone_re = /^\d{3}[-]\d{3}[-]\d{4}([xX]\d+)?$/;
      var OK = phone_re.test($(".email_seller_modal #phone").val());
      if (!OK) {
        errors.push({
          field: "phone",
          message: "Invalid phone number. (ex: 555-555-5555)"
        });
      }
    }

    // populate and color code errors
    errors.forEach(function(error) {
      $(".email_seller_modal ." + error.field + "_error").html(error.message);
      $(".email_seller_modal ." + error.field + "_error").css(
        "display",
        "block"
      );
      $(".email_seller_modal #" + error.field)
        .closest(".form-line")
        .find("label")
        .addClass("error");
    });

    // Are there errors? true, false
    return errors.length === 0;
  },
  removeErrorHighlighting: function() {
    /**
     * Converts the form back to it's original state, removing all errors and error highlighting
     */

    // remove prior error highlighting
    $(".email_seller_modal .form-line label").removeClass("error");
    $(".email_seller_modal .form-line .error-message")
      .css("display", "none")
      .html("");

    // Remove historical email submission results
    $(".email_seller_modal .email-form-result")
      .html("")
      .css("display", "none");
    $(".email_seller_modal .email-form-result-foot").css("display", "none");
    $(".email_seller_modal .email-form").css("display", "block");
    $(".email_seller_modal .email-form-foot").css("display", "block");
  },
  preparePhoneNumber: function(e) {
    /**
     * This takes the phone number input, converts the data into a strictly numerical value,
     * and formats it into the preferred format. This is triggered on the phone field's oninput event.
     *
     * @param e event data
     */

    // get the current value
    input = e.value;

    var newPhone = "";
    if (input) {
      // convert input into just numbers for future formatting
      var phone = input.replace(/\D/g, "");

      if (phone.length <= 3) {
        newPhone = phone.slice(0, 3);
      }
      if (phone.length > 3 && phone.length < 7) {
        newPhone = phone.slice(0, 3) + "-" + phone.slice(3, 6);
      }
      if (phone.length >= 7) {
        newPhone =
          phone.slice(0, 3) +
          "-" +
          phone.slice(3, 6) +
          "-" +
          phone.slice(6, 10);
      }
      if (phone.length > 10) {
        // Limit the phone number to the standard 10 characters within the USA
        var delta = phone.substring(-10, 10);
        newPhone =
          delta.slice(0, 3) +
          "-" +
          delta.slice(3, 6) +
          "-" +
          delta.slice(6, 10);
      }
    }

    // Set the new value
    e.value = newPhone;
  },
  closeEmailModal: function() {
    ddm.modal($(".email_seller_modal")).close();
    var self = this;

    // Wait until modal finishes closing before resetting form
    setTimeout(function() {
      document.getElementById("emailForm").reset();
      self.removeErrorHighlighting();
      document.activeElement.blur();
    }, 200);
  },
  openEmailModal: function() {
    var emailUrl = window.location.href
      .toString()
      .split(window.location.host)[1];
    var emailIndex = emailUrl.indexOf("emailingSeller=true");
    var self = this;
    messageSent = false;

    $(document).on("close", ".email_seller_modal", function() {
      if (messageSent !== true) {
        dataLayerHelper.simulateEvent(
          "emailCancel",
          document.querySelector(".email_seller_modal .icon-close")
        );
      }
    });

    if (emailIndex > -1) {
      // Setting a wait so the modals will be wired,
      // and the page is loaded more completely before the email form is opened.
      // We want to click so the tracking will be recorded
      $(".vdp-contact-info a.email_seller_modal_link").click();
    }
  }
};

$(document).ready(function() {
  setTimeout(function() {
    emailSeller.openEmailModal();
  }, 500);
});
